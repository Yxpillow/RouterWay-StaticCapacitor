worker_processes auto;
error_log /tmp/nginx_error.log;
pid /tmp/nginx.pid;

events {
    worker_connections 1024;
    use kqueue;
}

http {
    include       /tmp/nginx/conf/mime.types;
    default_type  application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /tmp/nginx_access.log main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    server {
        listen       8081;
        server_name  localhost;

        # 使用RouterWay相同的静态文件目录
        location / {
            root   /Users/yinglink/Desktop/从底层实践Thinkingformer/Public;
            index  index.html index.htm;
        }

        # 错误页面配置，对应RouterWay的错误页面
        error_page   400  /Errors/400.html;
        error_page   403  /Errors/403.html;
        error_page   404  /Errors/404.html;
        error_page   500  /Errors/500.html;
        error_page   502  /Errors/502.html;
        error_page   503  /Errors/503.html;

        location /Errors/ {
            root   /Users/yinglink/Desktop/从底层实践Thinkingformer/Public;
        }

        # API模拟端点（返回简单响应）
        location /api/v1 {
            return 200 '{"message": "API v1 response", "server": "nginx"}';
            add_header Content-Type application/json;
        }

        location /api/v2 {
            return 200 '{"message": "API v2 response", "server": "nginx"}';
            add_header Content-Type application/json;
        }

        location /你好 {
            return 200 '{"message": "你好，这是nginx", "server": "nginx"}';
            add_header Content-Type application/json;
        }

        location /想哭 {
            return 200 '{"message": "不要哭，nginx在这里", "server": "nginx"}';
            add_header Content-Type application/json;
        }

        location /test {
            return 200 '{"message": "nginx test endpoint", "server": "nginx"}';
            add_header Content-Type application/json;
        }
    }
}